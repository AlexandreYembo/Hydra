version: "3"

services:
  rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbit-hydra
        environment:
            RABBITMQ_DEFAULT_USER: "hydra"
            RABBITMQ_DEFAULT_PASS: "hydra"
        ports:
          - "5672:5672"
          - "15672:15672"
        
        volumes: 
          - dpkeys:/var/rabbitmq/  

  sql-server:
        image: alexandreyembo/hydra-sql-server:latest
        container_name: hydra-sql-server
        build: 
            context: ../sql
            dockerfile: ./Dockerfile
        ports:
          - "1433:1433"
        environment:
            SA_PASSWORD: "Prod@123"
            ACCEPT_EULA: "Y"

  # hydra-admin:
  #   image:  alexandreyembo/hydra-admin:latest
  #   container_name: hydra-admin
  #   build:
  #     context: ../../hydra-ui
  #     dockerfile: ./hydra-admin/Dockerfile
  #   ports:
  #     - "4201:4201"
  #   volumes:
  #      - ./hydra-admin:/usr/src/app/hydra-admin
  #      - /usr/src/app/hydra-admin/node_modules
  #   depends_on:
  #      - identity-api
  #      - customers-api
  #      - catalog-api
       
  identity-api:
        image:  alexandreyembo/hydra-identity-api:latest
        #  you might not use container_name if you are using load balance
        container_name: hydra-identity-api
        build: 
            context: ../../hydra-authentication
            dockerfile: ./dotnet3.1/Hydra.Identity.API/Dockerfile
        restart: always
        ports:
          - "5202:5202"
        # environment: 
        #     - ASPNETCORE_ENVIRONMENT=Production
        #     - ASPNETCORE_URLS=https://+:5201;http://+5202
        #     - ASPNETCORE_Kestrel__Certificates__Default__Password=hydra
        #     - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/hydra-certificate.pfx
        environment:
           - ASPNETCORE_ENVIRONMENT=Production
           - ASPNETCORE_URLS=http://*:5202
        # volumes:
        #     - ./certs:/https:ro
        depends_on:
          - rabbitmq
          - sql-server

  customers-api:
        image:  alexandreyembo/hydra-customers-api:latest
        #  you might not use container_name if you are using load balance
        container_name: hydra-customers-api
        build: 
            context: ../../hydra-customers
            dockerfile: ./dotnet3.1/Hydra.Customers.API/Dockerfile
        restart: always
        ports:
          - "5302:5302"
        # environment: 
        #     - ASPNETCORE_ENVIRONMENT=Production
        #     - ASPNETCORE_URLS=https://+:5201;http://+5202
        #     - ASPNETCORE_Kestrel__Certificates__Default__Password=hydra
        #     - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/hydra-certificate.pfx
        environment:
           - ASPNETCORE_ENVIRONMENT=Production
           - ASPNETCORE_URLS=http://*:5302
        # volumes:
        #     - ./certs:/https:ro
        depends_on:
          - rabbitmq
          - identity-api
          - sql-server

  catalog-api:
        image:  alexandreyembo/hydra-catalog-api:latest
        #  you might not use container_name if you are using load balance
        container_name: hydra-catalog-api
        build: 
            context: ../../hydra-catalog
            dockerfile: ./dotnet3.1/Hydra.Catalog.API/Dockerfile
        restart: always
        ports:
          - "5402:5402"
        # environment: 
        #     - ASPNETCORE_ENVIRONMENT=Production
        #     - ASPNETCORE_URLS=https://+:5201;http://+5202
        #     - ASPNETCORE_Kestrel__Certificates__Default__Password=hydra
        #     - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/hydra-certificate.pfx
        environment:
           - ASPNETCORE_ENVIRONMENT=Production
           - ASPNETCORE_URLS=http://*:5402
        # volumes:
        #     - ./certs:/https:ro
        depends_on:
          - rabbitmq
          - identity-api
          - sql-server

#   hydra-server:
#         image: alexandreyembo/hydra-server:latest
#         container_name: hydra-server    
#         build: 
#             context: ./
#             dockerfile: ./nginx/Dockerfile 
#         restart: always 
#         ports:
#             - "80:80"
#             - "443:443"
#         depends_on:
#             - web-mvc

volumes:
    dpkeys:     